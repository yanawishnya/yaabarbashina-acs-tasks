//------------------------------------------------------------------------------
// container_Constr.cpp - содержит функции обработки контейнера
//------------------------------------------------------------------------------

#include "container.h"

//------------------------------------------------------------------------------
// Инициализация контейнера
void Init(container &c) {
    c.len = 0;
}

//------------------------------------------------------------------------------
// Очистка контейнера от элементов (освобождение памяти)
void Clear(container &c) {
    for (int i = 0; i < c.len; ++i) {
        delete c.cont[i];
    }
    c.len = 0;
}

//------------------------------------------------------------------------------
// Ввод содержимого контейнера из указанного потока
void In(container &c, std::ifstream &ifst) {
    while (!ifst.eof() && ifst.good()) {
        if ((c.cont[c.len] = In(ifst)) != nullptr) {
            c.len++;
        }
    }
}

//------------------------------------------------------------------------------
// Ввод содержимого контейнера случайным образом.
void InRand(container &c, int size) {
    while (c.len < size) {
        if ((c.cont[c.len] = InRand()) != nullptr) {
            c.len++;
        }
    }
}

//------------------------------------------------------------------------------
// Вывод содержимого контейнера в указанный поток
void Out(container &c, ofstream &ofst) {
    ofst << "Container contains " << c.len << " elements." << endl;
    for (int i = 0; i < c.len; i++) {
        ofst << i + 1 << ": ";
        Out(*c.cont[i], ofst);
    }
}

//------------------------------------------------------------------------------
// Сортировка пузырьком.
void BubbleSort(container &c) {
    int right = c.len - 1;
    text* temp;
    while (right > 0) {
        int k = 0;
        for (int i = 0; i < right; ++i) {
            if (Quotient(*c.cont[i]) > Quotient(*c.cont[i + 1])) {
                temp = c.cont[i + 1];
                c.cont[i + 1] = c.cont[i];
                c.cont[i] = temp;
                k = i;
            }
        }
        right = k;
    }
}
